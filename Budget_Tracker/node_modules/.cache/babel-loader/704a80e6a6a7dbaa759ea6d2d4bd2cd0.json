{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyspyker/Documents/Udemy/React_Guide/Over_all_project/Budget_react/01-starting-setup/src/components/NewExpenses/NewExpenseForm.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './NewExpenseForm.style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpenseForm = () => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // alternatives\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // })\n\n  const titleChangeHandler = event => {\n    console.log(event);\n    setEnteredTitle(event.target.value); //alternative 1\n    // setUserInput({\n    // ...userInput,\n    // enteredTitle: event.target.value\n    // })\n    //alternative 2\n    //if your state updated depends on the previous form\n    //use this function form.\n    // setUserInput((prevState) => {\n    //     return {...prevState, enteredTitle: event.target.value }\n    // })\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value); // alternatives\n    // setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value\n    //     })\n    //alternative 2\n    //if your state updated depends on the previous form\n    //use this function form.\n    // setUserInput((prevState) => {\n    //     return {...prevState, enteredAmount: event.target.value }\n    // })\n  };\n\n  const dateChangeHandler = event => {\n    console.log(event.target.value);\n    setEnteredDate(event.taget.value); //alternativers\n    // setUserInput({\n    //     ...userInput,\n    //     enteredDate: event.target.value\n    //     })\n    //alternative 2\n    // setUserInput((prevState) => {\n    //     return {...prevState, entereDate: event.target.value }\n    // })\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n  }; // const submitHandler = event => {\n  //     event.preventDefault();\n  //     let myHours = new Date().getHours();\n  //     if (myHours < 10) { myHours = '0' + myHours; }\n  //     const expenseData = {\n  //       title: enteredTitle,\n  //       amount: enteredAmount,\n  //       date: new Date(\n  //         `${enteredDate}T${myHours}:00:00`\n  //       )\n  //     };\n  //     console.log(\n  //       'ExpenseForm > submitHandler > expenseData: ',\n  //       expenseData\n  //     );\n  //     console.log(enteredDate, typeof enteredDate);\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"201901.01\",\n          max: \"2022.12.31\",\n          value: enteredDate,\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 13\n  }, this);\n};\n\n_s(NewExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = NewExpenseForm;\nexport default NewExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpenseForm\");","map":{"version":3,"sources":["/Users/anthonyspyker/Documents/Udemy/React_Guide/Over_all_project/Budget_react/01-starting-setup/src/components/NewExpenses/NewExpenseForm.component.js"],"names":["React","useState","NewExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","console","log","target","value","amountChangeHandler","dateChangeHandler","taget","submitHandler","preventDefault","expenseData","title","amount","date","Date"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n\nimport './NewExpenseForm.style.css'\n\nconst NewExpenseForm = () => {\n\n    const [enteredTitle, setEnteredTitle] = useState('')\n    const [enteredAmount, setEnteredAmount] = useState('')\n    const [enteredDate, setEnteredDate] = useState('')\n\n    \n    // alternatives\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: ''\n    // })\n    \n    const titleChangeHandler = (event) => {\n        console.log(event)\n        setEnteredTitle (event.target.value)\n\n        //alternative 1\n        // setUserInput({\n        // ...userInput,\n        // enteredTitle: event.target.value\n        // })\n        //alternative 2\n        //if your state updated depends on the previous form\n        //use this function form.\n        // setUserInput((prevState) => {\n        //     return {...prevState, enteredTitle: event.target.value }\n        // })\n    };\n\n    const amountChangeHandler = (event) => {\n\n        setEnteredAmount (event.target.value)\n        \n        // alternatives\n        // setUserInput({\n        //     ...userInput,\n        //     enteredAmount: event.target.value\n        //     })\n        //alternative 2\n        //if your state updated depends on the previous form\n        //use this function form.\n        // setUserInput((prevState) => {\n        //     return {...prevState, enteredAmount: event.target.value }\n        // })\n    }\n\n    const dateChangeHandler = (event) => {\n        console.log(event.target.value)\n        setEnteredDate(event.taget.value)\n\n        //alternativers\n        // setUserInput({\n        //     ...userInput,\n        //     enteredDate: event.target.value\n        //     })\n        //alternative 2\n        \n        // setUserInput((prevState) => {\n            //     return {...prevState, entereDate: event.target.value }\n            // })\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        }\n        \n\n        console.log(expenseData)\n    }\n    // const submitHandler = event => {\n    //     event.preventDefault();\n    //     let myHours = new Date().getHours();\n    //     if (myHours < 10) { myHours = '0' + myHours; }\n    //     const expenseData = {\n    //       title: enteredTitle,\n    //       amount: enteredAmount,\n    //       date: new Date(\n    //         `${enteredDate}T${myHours}:00:00`\n    //       )\n    //     };\n    //     console.log(\n    //       'ExpenseForm > submitHandler > expenseData: ',\n    //       expenseData\n    //     );\n    //     console.log(enteredDate, typeof enteredDate);\n    //   };\n    \n\n        return (\n            <form onSubmit={submitHandler}>\n                <div className='new-expense__controls'>\n                    <div className='new-expense__control'>\n                        <label>Title</label>\n                        <input type='text' value={enteredTitle} onChange={titleChangeHandler}/>\n                    </div>\n                    <div className='new-expense__control'>\n                        <label>Amount</label>\n                        <input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler}/>\n                    </div>\n                    <div className='new-expense__control'>\n                        <label>Date</label>\n                        <input \n                        type='date' \n                        min='201901.01' \n                        max='2022.12.31' \n                        value={enteredDate}\n                        onChange={dateChangeHandler}\n                        />\n                    </div>\n                </div>\n                <div className=\"new-expense__actions\">\n                    <button type='submit'>Add Expense</button>\n                </div>\n            </form>\n        \n    )\n}\n\nexport default NewExpenseForm"]},"metadata":{},"sourceType":"module"}